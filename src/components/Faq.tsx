import { useState } from 'react';
import { ChevronDown } from 'lucide-react';

interface FAQProps {
  onContactClick?: () => void;
}

const faqData = [
  {
    question: '–ß—Ç–æ —Ç–∞–∫–æ–µ –≥–∏–¥—Ä–æ–∞–±—Ä–∞–∑–∏–≤–Ω–∞—è —Ä–µ–∑–∫–∞?',
    answer:
      '–≠—Ç–æ –º–µ—Ç–æ–¥ –≤—ã—Å–æ–∫–æ—Ç–æ—á–Ω–æ–π —Ä–µ–∑–∫–∏ —Ä–∞–∑–ª–∏—á–Ω—ã—Ö –º–∞—Ç–µ—Ä–∏–∞–ª–æ–≤ —Å –ø–æ–º–æ—â—å—é —Å—Ç—Ä—É–∏ –≤–æ–¥—ã —Å –¥–æ–±–∞–≤–ª–µ–Ω–∏–µ–º –∞–±—Ä–∞–∑–∏–≤–∞. –ë–µ–∑ –Ω–∞–≥—Ä–µ–≤–∞, –±–µ–∑ –¥–µ—Ñ–æ—Ä–º–∞—Ü–∏–π, –∏–¥–µ–∞–ª—å–Ω–æ –¥–ª—è –º–µ—Ç–∞–ª–ª–æ–≤, –∫–µ—Ä–∞–º–∏–∫–∏, —Å—Ç–µ–∫–ª–∞ –∏ –¥—Ä—É–≥–∏—Ö –º–∞—Ç–µ—Ä–∏–∞–ª–æ–≤.',
  },
  {
    question: '–ö–∞–∫–∏–µ –º–∞—Ç–µ—Ä–∏–∞–ª—ã –º–æ–∂–Ω–æ —Ä–µ–∑–∞—Ç—å?',
    answer:
      '–ü—Ä–∞–∫—Ç–∏—á–µ—Å–∫–∏ –ª—é–±—ã–µ: –º–µ—Ç–∞–ª–ª, –Ω–µ—Ä–∂–∞–≤–µ–π–∫–∞, –∞–ª—é–º–∏–Ω–∏–π, —Å—Ç–µ–∫–ª–æ, –∫–µ—Ä–∞–º–∏–∫–∞, –º—Ä–∞–º–æ—Ä, –∫–æ–º–ø–æ–∑–∏—Ç—ã, —Ä–µ–∑–∏–Ω–∞, –ø–ª–∞—Å—Ç–∏–∫ –∏ –¥–∞–∂–µ –¥–µ—Ä–µ–≤–æ.',
  },
  {
    question: '–ö–∞–∫–∞—è —Ç–æ—á–Ω–æ—Å—Ç—å —É —Ä–µ–∑–∫–∏?',
    answer:
      '–¢–æ—á–Ω–æ—Å—Ç—å –∑–∞–≤–∏—Å–∏—Ç –æ—Ç –º–∞—Ç–µ—Ä–∏–∞–ª–∞ –∏ —Ç–æ–ª—â–∏–Ω—ã, –Ω–æ –∫–∞–∫ –ø—Ä–∞–≤–∏–ª–æ ‚Äî –¥–æ ¬±0.1 –º–º. –≠—Ç–æ –ø—Ä–æ–º—ã—à–ª–µ–Ω–Ω—ã–π —É—Ä–æ–≤–µ–Ω—å –∫–∞—á–µ—Å—Ç–≤–∞.',
  },
  {
    question: '–ö–∞–∫ –±—ã—Å—Ç—Ä–æ –≤—ã–ø–æ–ª–Ω—è–µ—Ç—Å—è –∑–∞–∫–∞–∑?',
    answer:
      '–°—Ä–æ–∫–∏ –∑–∞–≤–∏—Å—è—Ç –æ—Ç –æ–±—ä—ë–º–∞ –∏ –º–∞—Ç–µ—Ä–∏–∞–ª–∞. –ù–µ–±–æ–ª—å—à–∏–µ –∑–∞–∫–∞–∑—ã ‚Äî –æ—Ç 1 –¥–Ω—è. –ü—Ä–∏ –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ—Å—Ç–∏ –º–æ–∂–µ–º —Ä–∞–±–æ—Ç–∞—Ç—å —Å—Ä–æ—á–Ω–æ.',
  },
  {
    question: '–ù—É–∂–Ω–æ –ª–∏ –ø–æ–¥–≥–æ—Ç–∞–≤–ª–∏–≤–∞—Ç—å —á–µ—Ä—Ç–µ–∂?',
    answer:
      '–ú–æ–∂–Ω–æ –ø—Ä–∏—Å–ª–∞—Ç—å —Å–≤–æ–π —á–µ—Ä—Ç—ë–∂ –≤ —Ñ–æ—Ä–º–∞—Ç–µ .dxf, .dwg, .pdf –∏–ª–∏ .step. –ï—Å–ª–∏ –Ω–µ—Ç ‚Äî —Å–¥–µ–ª–∞–µ–º —Å–∞–º–∏ –Ω–∞ –æ—Å–Ω–æ–≤–µ –≤–∞—à–∏—Ö –∑–∞–º–µ—Ä–æ–≤ –∏ —Ñ–æ—Ç–æ.',
  },
  {
    question: '–ö–∞–∫ –æ—Ñ–æ—Ä–º–∏—Ç—å –∑–∞–∫–∞–∑?',
    answer:
      '–°–≤—è–∂–∏—Ç–µ—Å—å —Å –Ω–∞–º–∏ –ø–æ —Ç–µ–ª–µ—Ñ–æ–Ω—É –∏–ª–∏ —á–µ—Ä–µ–∑ —Ñ–æ—Ä–º—É –Ω–∞ —Å–∞–π—Ç–µ. –ú—ã —É—Ç–æ—á–Ω–∏–º –¥–µ—Ç–∞–ª–∏ –∏ –ø—Ä–∏—à–ª—ë–º —Ä–∞—Å—á—ë—Ç —Å—Ç–æ–∏–º–æ—Å—Ç–∏.',
  },
];

export default function FAQ({ onContactClick }: FAQProps) {
  const [openIndex, setOpenIndex] = useState<number | null>(null);

  const toggle = (index: number) => {
    setOpenIndex(openIndex === index ? null : index);
  };

  return (
    <section className="bg-white py-20 px-4 md:px-8" id="faq">
      <div className="max-w-4xl mx-auto">
        <div className="text-center mb-14">
          <h2 className="text-4xl md:text-5xl font-extrabold text-slate-800 mb-4" data-aos="fade-up">
            –ß–∞—Å—Ç—ã–µ –≤–æ–ø—Ä–æ—Å—ã
          </h2>
          <p className="text-slate-600 text-lg max-w-2xl mx-auto" data-aos="fade-up">
            –û—Ç–≤–µ—Ç—ã –Ω–∞ —Å–∞–º—ã–µ –ø–æ–ø—É–ª—è—Ä–Ω—ã–µ –≤–æ–ø—Ä–æ—Å—ã –æ –≥–∏–¥—Ä–æ–∞–±—Ä–∞–∑–∏–≤–Ω–æ–π —Ä–µ–∑–∫–µ
          </p>
        </div>

        <div className="space-y-3">
          {faqData.map((item, index) => (
            <div 
              key={index} 
              className="bg-slate-50 rounded-xl border border-slate-200 overflow-hidden shadow-sm hover:shadow-md transition-all duration-300"
              data-aos="fade-up"
              data-aos-delay={index * 100}
            >
              <button
                className="w-full flex justify-between items-center px-6 py-5 text-left text-slate-800 font-semibold focus:outline-none hover:bg-slate-100 transition-colors duration-200"
                onClick={() => toggle(index)}
              >
                <div className="flex items-center gap-3">
                  <div className="w-6 h-6 bg-sky-100 rounded-full flex items-center justify-center flex-shrink-0">
                    <span className="text-sky-600 font-bold text-xs">{index + 1}</span>
                  </div>
                  <span className="text-lg">{item.question}</span>
                </div>
                <ChevronDown
                  size={20}
                  className={`text-sky-600 transition-transform duration-300 flex-shrink-0 ${
                    openIndex === index ? 'rotate-180' : ''
                  }`}
                />
              </button>
              {openIndex === index && (
                <div className="px-6 pb-6 text-slate-600 text-base leading-relaxed border-t border-slate-200 bg-white">
                  <div className="flex items-start gap-3 pt-4">
                    <div className="w-6 h-6 bg-sky-50 rounded-full flex items-center justify-center flex-shrink-0 mt-0.5">
                      <span className="text-sky-500 text-xs">üí°</span>
                    </div>
                    <p>{item.answer}</p>
                  </div>
                </div>
              )}
            </div>
          ))}
        </div>

        <div className="text-center mt-12">
          <button
            onClick={onContactClick}
            className="inline-flex items-center gap-3 bg-sky-50 px-6 py-3 rounded-full border border-sky-200 hover:bg-sky-100 hover:border-sky-300 transition-all duration-200 cursor-pointer"
          >
            <span className="text-sky-600 text-lg">‚ùì</span>
            <span className="text-slate-700 font-medium">
              –û—Å—Ç–∞–ª–∏—Å—å –≤–æ–ø—Ä–æ—Å—ã? –°–≤—è–∂–∏—Ç–µ—Å—å —Å –Ω–∞–º–∏!
            </span>
          </button>
        </div>
      </div>
    </section>
  );
}
